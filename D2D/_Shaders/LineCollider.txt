//#include "00_Global.fx"   // Matrix CB,
//-----------------------------------------------------------------------------
// Common
//-----------------------------------------------------------------------------
cbuffer CB_PerFrame
{
    matrix View;              // View Matrix
    matrix Projection;      // Projection Matrix
}
matrix World;               // WorldMatrix

float4 LineColor = float4(0, 1, 0, 1);

//////////////////////////////////////////////////////////////////////////////
//  Line.h안에서  Vertex 정의와 동일
/////////////////////////////////////////////////////////////////////////////
struct VertexInput_Collider
{
    float4 Position : POSITION0;        // 시멘틱
};
struct VertexOutput_Collider
{
    float4 Position : SV_POSITION0;   // 시멘틱
};
//////////////////////////////////////////////////////////////////////////////
//  Vertex Shader
/////////////////////////////////////////////////////////////////////////////
VertexOutput_Collider VS_Collider(VertexInput_Collider input)
{
    VertexOutput_Collider output;

    output.Position = WorldPosition(input.Position);
    output.Position = ViewProjection(output.Position);

    return output;
}
//////////////////////////////////////////////////////////////////////////////
//  Pixel Shader
/////////////////////////////////////////////////////////////////////////////
float4 PS(VertexOutput_Collider input) : SV_TARGET0
{
    return LineColor;
}

technique11 T0
{
    P_VP(P0, VS_Collider, PS)
}